#Problem: the trajectory that we get from the planner has no notion of time 
#Controller to track the trajectory generated by the RRT* LQR algorithm
using LinearAlgebra
using DelimitedFiles
using Plots
using Interpolations #used to create the spline for the reference trajectory

#number of states
nx = 6

#path of the data
data_path = "/home/fausto/optimal-sampling-low-thrust/orbital_planner/src/rrt_star/Output.txt"

reference_traj = readdlm(data_path, ',')

#truncate in case the file has extra lines
reference_traj = reference_traj[:,1:nx]

#assume that dt between each point is 1 second
#dt = 1

function plot_cube!(x_range, y_range, z_range)
    plot!(x_range, y_range, z_range, color=:blue, alpha=0.3, label="")
    plot!([x_range[1], x_range[1]], y_range, z_range, color=:blue, alpha=0.3, label="")
    plot!([x_range[2], x_range[2]], y_range, z_range, color=:blue, alpha=0.3, label="")
    plot!(x_range, [y_range[1], y_range[1]], z_range, color=:blue, alpha=0.3, label="")
    plot!(x_range, [y_range[2], y_range[2]], z_range, color=:blue, alpha=0.3, label="")
    plot!(x_range, y_range, [z_range[1], z_range[1]], color=:blue, alpha=0.3, label="")
    plot!(x_range, y_range, [z_range[2], z_range[2]], color=:blue, alpha=0.3, label="")
end

# Define cube dimensions
x_range = [-3, -2]
y_range = [2, 2.5]
z_range = [2, 3]

# Create a 3D plot
plot(title="3D Cube", xlabel="X-axis", ylabel="Y-axis", zlabel="Z-axis", legend=false)
plot_cube!(x_range, y_range, z_range)

# # Display the plot
# display(plot!)


plot(reference_traj[:,1], reference_traj[:,2], reference_traj[:,3], label="reference trajectory")
plot_cube!(x_range, y_range, z_range)